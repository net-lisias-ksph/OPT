PART
{

// --- general parameters ---
name = ils_cockpit
module = Part
author = K.Yeon

// --- asset parameters ---
MODEL
{
	model = OPT/Parts/NewParts/i_5m_cockpit_ils
}
rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_bottom = 0.0, -1.98935, 0.0, 0.0, -1.0, 0.0, 4



// --- editor parameters ---
TechRequired = highAltitudeFlight
entryCost = 15000
cost = 2750
category = Pods
subcategory = 0
title = I-LS AA Cockpit
manufacturer = OPT Aerospace Division
description = ILS cockpit is an experimental cockpit created by OPT in the early days of space flights. It uses advanced aerodynamic designs and high forward visability windows.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 3
crashTolerance = 45
breakingForce = 500
breakingTorque = 500
maxTemp = 3200
emissiveConstant = 0.87
thermalMassModifier = 5.0


vesselType = Ship

maxTemp = 2500
dragModelType = default
bulkheadProfiles = i

MODULE
{
	name = ModuleLiftingSurface
	
	deflectionLiftCoeff = 0.2
	dragAtMaxAoA = 0.2
	dragAtMinAoA = 0
	useInternalDragModel=False
}

// --- internal setup ---
CrewCapacity = 5

INTERNAL
{
  name = ilsCockpit
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 1
}

RESOURCE
{
	name = ElectricCharge
	amount = 1500
	maxAmount = 1500
}
MODULE
{
	name = ModuleSAS	
}

MODULE
{
	name = ModuleReactionWheel

	actionGUIName = Toggle RW

	PitchTorque = 45
	YawTorque = 45
	RollTorque = 45
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.5
	}
}
MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}
MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Stored Data
	storeActionName = Store Experiments
	evaOnlyStorage = True
	storageRange = 3.0
}

RESOURCE
{
	name = MonoPropellant
	amount = 40
	maxAmount = 40
}
MODULE
{
	name = ModuleLiftingSurface
	
	deflectionLiftCoeff = 0.6
	dragAtMaxAoA = 0.3
	dragAtMinAoA = 0.1
}
MODULE
{
	name = ModuleAnimateGeneric
	animationName = light
	actionGUIName = Toggle Lights
	startEventGUIName = Lights On
	endEventGUIName = Lights Off
}
MODULE
{
	name = FlagDecal
	textureQuadName = Quad
}
MODULE
{
	name = FStextureSwitch2


//the names of the objects to swap textures on. Use semicolons to separate names. all objects with the same name that have a mesh will be switched, not just the first found.
objectNames = BODY;Window

// Optional: this text will be added to each the start of each entry in the textureNames and mapNames lists to make them neater. If you have textures in different folder, this value should be the lowest common folder. Each entry is treated like textureRootFolder + textureNames[i] 
textureRootFolder = OPT/Parts/NewParts/

// a list of textures, matching their names in the GameDatabase 
textureNames = texture_i_5m_cockpit_ils;texture_i_5m_cockpit_ils_alt

// The different variants can have a display name that explains what they are
textureDisplayNames = Original;Variant

// The text on the tweakable buttons in the hangar.
nextButtonText = Next
prevButtonText = Previous

// There¡¦s a line in the gui showing the current display name, this is the title on that line. If you have more than one switcher, explain the difference here.
statusText = Current Texture

// allows switching by the player in flight mode
switchableInFlight = false

// allows the player to repaint a part while walking around as a kerbal
repaintableEVA = false

	// You can show or hide the Previous button to save GUI clutter
showPreviousButton = false

// Pair the switching of the meshes with switching fuel tanks in a FSfuelSwitch module with no GUI
useFuelSwitchModule = false

// Turns on more debug messages to troubleshoot the module/cfg setup
debugMode = true

// show or hide the List Objects button. Disabled by default. Should only be on while developing the part. Outputs a list of gameObjects in the part to the Alt+F2 log
showListButton = false
}
}
